---
import CardPreview from '../../components/layout/CardPreview.astro'
import NotFound from '../../components/layout/NotFound.astro'
import Section from '../../components/layout/Section.astro'
import Pagination from '../../components/navigation/Pagination.astro'
import ProjectsIcon from '../../icons/ProjectsIcon.astro'
import MainLayout from '../../layouts/main.astro'
import type { CONTENTFUL_PROJECTS_PAGE } from '../../types'
import { getAllProjects } from '../../utils/contentfulApi'

const pageQuery = Astro.url.searchParams.get('page')
const currentPage = Math.max(parseInt(pageQuery || '1', 10) - 1, 0)

const res = await getAllProjects(currentPage)

const projects: Array<CONTENTFUL_PROJECTS_PAGE> = res?.data?.projectsCollection?.items
const projectCount = res?.data?.projectsCollection?.total
---

<MainLayout
  description="A collection of personal and professional projects that I've created over the years"
  title={!projectCount || currentPage <= 0 ? 'Projects' : `Projects Page ${currentPage + 1}`}
  type="article"
>
  <style slot="body" is:inline>
    .pagination {
      width: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    @media (hover: hover) {
      .pagination {
        margin-top: 12rem;
      }
    }

    @media (hover: none) {
      .pagination {
        margin-top: 2rem;
      }
    }

    @media (hover: hover) {
      .card {
        position: relative;
        margin-left: 0.25rem;
        margin-right: 0.25rem;
        margin-bottom: 2rem;
        height: 16.25rem;
        width: 18.75rem;
        overflow: hidden;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 51 102 / 1);
        background-color: transparent;
        text-align: center;
        color: rgb(0 150 255 / 1);
        --tw-shadow: inset -1px -1px 24px -9px rgba(114, 158, 255, 0.5);
        --tw-shadow-colored: inset -1px -1px 24px -9px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
          var(--tw-shadow);
      }
      @media (min-width: 640px) {
        .card {
          margin-bottom: 5rem;
        }
      }

      .card:hover,
      .card:focus,
      .card:focus-within {
        z-index: 10;
        --tw-scale-x: 1.1;
        --tw-scale-y: 1.1;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
          skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
          scaleY(var(--tw-scale-y));
        overflow: visible;
        border-width: 0px;
        transition-property: transform;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }

      .card:focus [data-title='card-title'],
      .card:focus-within [data-title='card-title'],
      .card:hover [data-title='card-title'] {
        background-color: rgb(0 136 255/1);
      }

      .card:hover > [data-title='placeholder'],
      .card:focus > [data-title='placeholder'],
      .card:focus-within > [data-title='placeholder'] {
        display: block;
      }
      .card:hover > [data-title='card-container'],
      .card:focus > [data-title='card-container'],
      .card:focus-within > [data-title='card-container'] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 150 255 / 1);
        background-color: rgb(0 2 14 / 1);
        opacity: 1;
        --tw-shadow: inset -1px -1px 24px -9px rgb(101 130 255 / 50%),
          0px 0px 26px -2px rgb(0 64 255);
        --tw-shadow-colored: inset -1px -1px 24px -9px var(--tw-shadow-color),
          0px 0px 26px -2px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
          var(--tw-shadow);
      }
      .card:hover > [data-title='card-container'] [data-title='bar'],
      .card:focus > [data-title='card-container'] [data-title='bar'],
      .card:focus-within > [data-title='card-container'] [data-title='bar'] {
        display: block;
      }
    }
    @media (hover: none) {
      .card {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
        margin-bottom: 2rem;
        height: 30.5rem;
        width: 100%;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 51 102 / 1);
        background-color: #00020e;
        text-align: center;
        color: rgb(0 150 255 / 1);
      }
      @media (min-width: 640px) {
        .card {
          margin-bottom: 3.5rem;
          width: 18.75rem;
        }
      }
      @media (max-width: 640px) {
        .card {
          height: auto;
          width: 100%;
        }
      }
    }

    @media (prefers-reduced-motion) {
      .card {
        height: 30.5rem;
        transform: none;
        background-color: #00020e;
        box-shadow: unset;
      }

      @media (max-width: 640px) {
        .card {
          height: auto;
          width: 100%;
        }
      }
      .card > [data-title='card-container'] {
        height: 100%;
      }

      .card:hover,
      .card:focus,
      .card:focus-within {
        transform: none;
        transition-property: none;
        transition-duration: none;
        transition-timing-function: none;
      }

      .card:hover > [data-title='card-container'],
      .card:focus > [data-title='card-container'],
      .card:focus-within > [data-title='card-container'] {
        position: unset;
      }

      .card:hover > [data-title='placeholder'],
      .card:focus > [data-title='placeholder'],
      .card:focus-within > [data-title='placeholder'] {
        display: none;
      }

      .pagination {
        margin-top: 2rem;
      }
    }
  </style>
  {
    projects && projects.length ? (
      <>
        <Section>
          <h1
            slot="within-header"
            class="space-x-2.5 break-words font-stylized text-2xl leading-none md:text-3xl"
          >
            <ProjectsIcon className="text-3xl sm:mb-0" />
            <span>projects</span>
          </h1>
          <p slot="within-header" class="max-w-xl p-2 text-lg font-bold text-primary-25">
            A collection of works that vary from fullstack web applications, to custom NPM packages,
            to standalone Mac OS and Linux applications.
          </p>
        </Section>
        <section class="mb-48 mt-20 flex flex-wrap items-center justify-center">
          {projects.map(({ preview, seoDescription, ...rest }) => (
            <CardPreview
              {...preview}
              {...rest}
              ariaLabel={`${rest.title} project page`}
              description={seoDescription}
              href="projects"
              alt={preview.description}
              trailingSlash
            />
          ))}
          <Pagination category="projects" total={projectCount} />
        </section>
      </>
    ) : (
      <NotFound />
    )
  }
</MainLayout>
