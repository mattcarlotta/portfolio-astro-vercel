---
import CardPreview from '../components/layout/CardPreview.astro'
import NotFound from '../components/layout/NotFound.astro'
import Orbits from '../components/layout/Orbits.astro'
import Section from '../components/layout/Section.astro'
import MainLayout from '../layouts/main.astro'
import { caller } from './api/trpc/[trpc]'

const cards = await caller.homeCards();
---

<MainLayout
  description="A fullstack developer who is passionate about open-source projects, helping the web development community, and building SEO optimized applications"
>
  <style slot="head" is:inline>
    @keyframes solar {
      0% {
        transform: rotateX(0) rotateY(0) rotateZ(0);
      }
      100% {
        transform: rotateX(360deg) rotateY(360deg) rotateZ(360deg);
      }
    }

    @media (min-width: 640px) {
      .orbits {
        display: block;
      }
    }

    .orbits {
      position: relative;
      z-index: -1;
      display: hidden;
      opacity: 0.4;
    }

    .circleContainer {
      position: absolute;
      top: -4rem;
      left: 0;
      right: 0;
      bottom: 0;
      margin: auto;
      height: 12.5rem;
      width: 12.5rem;
      transform: rotateX(60deg) rotateZ(-30deg);
      animation: solar 20s infinite linear;
      transform-style: preserve-3d;
    }

    .circle {
      position: absolute;
      height: 12.5rem;
      width: 12.5rem;
      border-radius: 9999px;
      transform-style: preserve-3d;
      --tw-shadow: 0 0 20px #00020c, inset 0 0 20px #2c4776;
      --tw-shadow-colored: 0 0 20px var(--tw-shadow-color), inset 0 0 20px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
        var(--tw-shadow);
    }

    .circle::after,
    .circle::before {
      --tw-bg-opacity: 1;
      background-color: rgb(44 71 118 / var(--tw-bg-opacity));
      --tw-shadow: 0 0 5px 2px #2c4776;
      --tw-shadow-colored: 0 0 5px 2px var(--tw-shadow-color);
      box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
        var(--tw-shadow);
      content: '';
      position: absolute;
      top: 0;
      bottom: 0;
      right: 0;
      left: 0;
      margin: auto;
      display: block;
      height: 0.1rem;
      width: 0.1rem;
    }

    .circle::after {
      transform: translateZ(90px);
    }

    .circle::before {
      transform: translateZ(-90px);
    }

    .circleOne {
      transform: rotateZ(72deg) rotateX(63.435deg);
    }

    .circleTwo {
      transform: rotateZ(144deg) rotateX(63.435deg);
    }

    .circleThree {
      transform: rotateZ(216deg) rotateX(63.435deg);
    }

    .circleFour {
      transform: rotateZ(288deg) rotateX(63.435deg);
    }

    .circleFive {
      transform: rotateZ(360deg) rotateX(63.435deg);
    }

    @media (hover: hover) {
      .card {
        position: relative;
        margin-left: 0.25rem;
        margin-right: 0.25rem;
        margin-bottom: 2rem;
        height: 16.25rem;
        width: 18.75rem;
        overflow: hidden;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 51 102 / 1);
        background-color: transparent;
        text-align: center;
        color: rgb(0 150 255 / 1);
        --tw-shadow: inset -1px -1px 24px -9px rgba(114, 158, 255, 0.5);
        --tw-shadow-colored: inset -1px -1px 24px -9px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
          var(--tw-shadow);
      }
      @media (min-width: 640px) {
        .card {
          margin-bottom: 5rem;
        }
      }
      .card:hover,
      .card:focus,
      .card:focus-within {
        z-index: 10;
        --tw-scale-x: 1.1;
        --tw-scale-y: 1.1;
        transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate))
          skew(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x))
          scaleY(var(--tw-scale-y));
        overflow: visible;
        border-width: 0px;
        transition-property: transform;
        transition-duration: 0.2s;
        transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
      }

      .card:focus [data-title='card-title'],
      .card:focus-within [data-title='card-title'],
      .card:hover [data-title='card-title'] {
        background-color: rgb(0 136 255/1);
      }

      .card:hover > [data-title='placeholder'],
      .card:focus > [data-title='placeholder'],
      .card:focus-within > [data-title='placeholder'] {
        display: block;
      }
      .card:hover > [data-title='card-container'],
      .card:focus > [data-title='card-container'],
      .card:focus-within > [data-title='card-container'] {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 150 255 / 1);
        background-color: rgb(0 2 14 / 1);
        opacity: 1;
        --tw-shadow: inset -1px -1px 24px -9px rgb(101 130 255 / 50%),
          0px 0px 26px -2px rgb(0 64 255);
        --tw-shadow-colored: inset -1px -1px 24px -9px var(--tw-shadow-color),
          0px 0px 26px -2px var(--tw-shadow-color);
        box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000),
          var(--tw-shadow);
      }
      .card:hover > [data-title='card-container'] [data-title='bar'],
      .card:focus > [data-title='card-container'] [data-title='bar'],
      .card:focus-within > [data-title='card-container'] [data-title='bar'] {
        display: block;
      }
    }

    @media (hover: none) {
      .card {
        margin-left: 0.25rem;
        margin-right: 0.25rem;
        margin-bottom: 2rem;
        height: 28rem;
        width: 100%;
        border-bottom-right-radius: 0.25rem;
        border-bottom-left-radius: 0.25rem;
        border-width: 1px;
        border-style: solid;
        border-color: rgb(0 51 102 / 1);
        background-color: #00020e;
        text-align: center;
        color: rgb(0 150 255 / 1);
        transform: none;
      }

      @media (min-width: 640px) {
        .card {
          margin-bottom: 3.5rem;
          width: 18.75rem;
        }
      }
      @media (max-width: 640px) {
        .card {
          height: auto;
          width: 100%;
        }
      }
    }

    @media (prefers-reduced-motion) {
      .card {
        height: 28rem;
        transform: none;
        background-color: #00020e;
        box-shadow: unset;
      }

      @media (max-width: 640px) {
        .card {
          height: auto;
          width: 100%;
        }
      }
      .card > [data-title='card-container'] {
        height: 100%;
      }

      .card:hover,
      .card:focus,
      .card:focus-within {
        transform: none;
        transition-property: none;
        transition-duration: none;
        transition-timing-function: none;
      }

      .card:hover > [data-title='card-container'],
      .card:focus > [data-title='card-container'],
      .card:focus-within > [data-title='card-container'] {
        position: unset;
      }

      .card:hover > [data-title='placeholder'],
      .card:focus > [data-title='placeholder'],
      .card:focus-within > [data-title='placeholder'] {
        display: none;
      }

      .circleContainer {
        animation: none;
      }
    }
  </style>
  {
    cards ? (
      <>
        <Section>
          <h1
            slot="within-header"
            class="blue-text-shadow font-stylized text-[2rem] uppercase leading-none tracking-wider text-white sm:text-5xl"
          >
            Matt Carlotta
          </h1>
          <h2
            slot="within-header"
            class="font-stylized text-base font-bold text-primary sm:text-lg"
          >
            Fullstack Software Engineer
          </h2>
          <Orbits slot="after-header" />
        </Section>
        <section class="mt-28 flex flex-wrap items-center justify-center">
          {cards.map(({ preview, slug, ...rest }) => (
            <CardPreview
              {...preview}
              {...rest}
              ariaLabel={`${slug} page`}
              href={slug}
              alt={preview.description}
            />
          ))}
        </section>
      </>
    ) : (
      <NotFound />
    )
  }
</MainLayout>
